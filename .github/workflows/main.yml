name: CI/CD Workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code for Test
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'oracle'
          cache: maven

      - name: Setup Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.9.4

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Tests with H2
        run: mvn test -Dspring.config.location=src/main/resources/application-test.properties

  sonarcloud:
    needs: test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_PASSWORD: 'postgres'
          POSTGRES_DB: 'chatapplicatie'
        ports:
          - 5433:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code for SonarCloud
        uses: actions/checkout@v3
        with:
         fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'oracle'
          cache: maven

      - name: Configure SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          export SPRING_DATASOURCE_URL='jdbc:postgresql://localhost:5433/chatapplicatie'
          export SPRING_DATASOURCE_USERNAME='postgres'
          export SPRING_DATASOURCE_PASSWORD='postgres'
          mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Pcoverage

  build:
    needs: sonarcloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code for Build
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'oracle'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn clean install -DskipTests=true

      - name: Build and tag Docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/chatapplicatie-backend:latest .

      - name: Push Docker images to Docker Hub
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push ${{ secrets.DOCKER_USERNAME }}/chatapplicatie-backend:latest